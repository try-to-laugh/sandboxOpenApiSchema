openapi: 3.0.0
info:
  title: API for budget application
  description: OpenAPI schema of budget application
  version: 0.1.9
tags:
  - name: hello world sample
  - name: UserTransactions
paths:
  /hello:
    get:
      summary: Returns a 'hello world' string.
      tags:
        - hello world sample
      description: Returns a 'hello world' string.
      operationId: hello
      responses:
        '200':
          description: A list of user's wallets
          content:
            application/json:
              schema:
                type: string
                example: hello world
  /transactions/{species}:
    get:
      summary: Get all or any quantity tansactions
      tags:
        - UserTransactions
      operationId: getTransactions
      parameters:
        - name: species
          schema:
            type: string
            enum: [ all, inc, exp ]
          in: path
          description: You need choouse species of Transaction
          required: true
        - name: isAll
          schema:
            type: boolean
          in: query
          description: If true you give back all Transaction
          required: true
        - name: quantity
          schema:
            type: integer
          in: query
          description: Quantity last by date of transactions, which you want to give  back
          required: true
      responses:
        200:
          description: This means its ok!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        400:
          description: REQUES
    post:
      summary: Create tansaction
      tags:
        - UserTransactions
      operationId: addTransaction
      parameters:
        - name: species
          schema:
            type: string
            enum: [ all, inc, exp ]
          in: path
          description: You need choouse species of Transaction
          required: true
      requestBody:
        description: Data for create transaction
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        200:
          description: Operation completed without errors and expected response received from server
          content:
            application/json:
              schema:
                type: boolean
        400:
          description: REQUES
  /transactions/{transactionId}:
    get:
      summary: Get tansactions by ID
      tags:
        - UserTransactions
      operationId: getTransactionById
      parameters:
        - name: transactionId
          schema:
            type: integer
          in: path
          description: ID of needed transaction
          required: true
      responses:
        200:
          description: Operation completed without errors and expected response received from server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        400:
          description: REQUES
    put:
      summary: Get tansactions by ID
      tags:
        - UserTransactions
      operationId: updateTransactionById
      parameters:
        - name: transactionId
          schema:
            type: integer
          in: path
          description: ID of needed transaction
          required: true
      requestBody:
        description: Data for uppdate transaction
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        200:
          description: Operation completed without errors and expected response received from server
          content:
            application/json:
              schema:
                type: boolean
        400:
          description: REQUES
    delete:
      summary: Delete tansactions by ID
      tags:
        - UserTransactions
      operationId: deleteTransactionById
      parameters:
        - name: transactionId
          schema:
            type: integer
          in: path
          description: ID of deleted transaction
          required: true
      responses:
        200:
          description: Operation completed without errors and expected response received from server
          content:
            application/json:
              schema:
                type: boolean
        400:
          description: REQUES
components:
  schemas:
    Transaction:
      description: This is  Transaction object
      type: object
      properties:
        transactionId:
          description: Transaction's ID
          type: integer
        species:
          description: Transaction's type
          type: string
          enum: [all, inc, exp]
        date:
          description: Transaction's data
          type: string
        category:
          description: Category of transactions
          type: string
        subcategory:
          description: Need only for expense transactions
          type: string
        amount:
          description: Transaction's amount
          type: number
        walletName:
          description: The wallet in which the transaction is located
          type: string
        payer:
          description:  Need only for expense transactions
          type: string
        Note:
          description: Something about transacaction
          type: string